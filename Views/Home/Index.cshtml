@{
    ViewData["Title"] = "Terminal";
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.9.6/ace.js"></script>
<script src="~/js/signalr/dist/browser/signalr.js"></script>
<link rel="stylesheet" href="~/css/xterm.css" />
<script src="~/js/xterm.js"></script>


<div class="w-screen min-h-screen flex flex-col gap-4 bg-base-200">
    <div class="grid grid-rows-2 lg:grid-rows-1 grid-cols-1 lg:grid-cols-2 gap-8 lg:gap-16 p-12 lg:p-24 min-h-screen w-full">
        <div class="shadow-xl" id="editor">PRINT "HELLO WORLD"</div>
        <div class="flex flex-col gap-4">
            <div class="flex gap-4">
                <button id="status" class="btn btn-primary" onclick="Run()">RUN</button>
            </div>
            <div id="terminal" class="shadow-xl"></div>
            <div>
                <p class="mb-4">Syntax Guide</p>
                <div class="grid grid-cols-5 gap-8">
                    <button class="btn btn-primary btn-outline" onclick="loadPreset('basics')">BASICS</button>
                    <button class="btn btn-primary btn-outline" onclick="loadPreset('io')">IO</button>
                    <button class="btn btn-primary btn-outline" onclick="loadPreset('selection')">SELECTION</button>
                    <button class="btn btn-primary btn-outline" onclick="loadPreset('loop')">LOOP</button>
                    <button class="btn btn-primary btn-outline" onclick="loadPreset('arrays')">ARRAYS</button>
                    <button class="btn btn-primary btn-outline" onclick="loadPreset('string')">STRING</button>
                    <button class="btn btn-primary btn-outline" onclick="loadPreset('function')">FUNCTION</button>
                    <button class="btn btn-primary btn-outline" onclick="loadPreset('builtin')">BUILTIN</button>
                    <button class="btn btn-primary btn-outline" onclick="loadPreset('procedure')">PROCEDURE</button>
                    <button class="btn btn-primary btn-outline" onclick="loadPreset('prime')">PRIME</button>
                    <button class="btn btn-primary btn-outline" onclick="loadPreset('bubblesort')">BUBBLESORT</button>
                </div>
            </div>
        </div>
    </div>
    <p class="absolute bottom-2 right-6 opacity-10 text-sm">Developed by Jingcheng Yang</p>
</div>

<div id="terminal"></div>
<script>
    document.getElementById('status').innerText = "CONNECTING";
    document.getElementById('status').classList.add("loading");

    var editor = ace.edit("editor");
    editor.setTheme("ace/theme/github");
    editor.session.setMode("ace/mode/text");
    editor.setOptions({
        fontSize: "24px",
        fontFamily: "courier"
    });

    var term = new Terminal();
    term.open(document.getElementById('terminal'));
    term.setOption('theme', {
        background: '#EEEEEE',
        foreground: '#000000'

    });


    function loadPreset(path)
    {
        const url = window.location.origin + "/presets/" + path + ".txt"
        fetch(url)
            .then(r => r.text())
            .then(t => editor.setValue(t, 1))
    }

    //term.write('Hello from \x1B[1;3;31mxterm.js\x1B[0m $ ')
    var running = false;
    input = '';

    term.onData(e => {
        if (!running) return;
        switch (e) {
            case '\u0003': // Ctrl+C
                term.write('^C');
                prompt(term);
                break;
            case '\r': // Enter
                if (input != '') {
                    $.ajax({
                        type: "POST",
                        url: window.location.origin + "/Home/Input",
                        data: JSON.stringify({ input: input, connectionId: connection.connection.connectionId }),
                        contentType: 'application/json',
                        //new JSAnnotation("CS", index, fabricObj.toJSON()),
                        success: function (data) {
                            console.log("SUCCESS");
                        },
                    });
                    console.log(input);
                    input = '';
                }
                term.write('\r\n');
                break;
            case '\u007F': // Backspace (DEL)
                // Do not delete the prompt
                if (term._core.buffer.x > 0) {
                    term.write('\b \b');
                    if (input.length > 0) {
                        input = input.substr(0, input.length - 1);
                    }
                }
                break;
            default: // Print all other characters for demo
                if (e >= String.fromCharCode(0x20) && e <= String.fromCharCode(0x7E) || e >= '\u00a0') {
                    input += e;
                    term.write(e);
                }
        }
    });

    "use strict";

    var connection = new signalR.HubConnectionBuilder().withUrl("/terminalHub").build();

    //Disable the send button until connection is established.
    //document.getElementById("sendButton").disabled = true;

    connection.on("Output", function (output) {
        console.log(output);
        term.write(output + '\r\n')
    });

      connection.on("Error", function (output) {
        term.write('\u001b[31m' + output + '\r\n')
        term.write('\u001b[0m')
    });

    connection.on("Complete", function () {
        running = false;
        term.write("\r\n$ COMPLETE\r\n");
        document.getElementById('status').innerText = "RUN";
        document.getElementById('status').classList.remove("loading");
    });

    function Run() {
        term.clear()
        term.write("$ COMPILING...\r\n");
        running = true;
        document.getElementById('status').innerText = "RUNNING";
        document.getElementById('status').classList.add("loading");
        var pseudoCode = editor.getValue();
        console.log(connection.connection.connectionId)
        $.ajax({
            type: "POST",
            url: window.location.origin + "/Home/Run",
            data: JSON.stringify({ code: pseudoCode, connectionId: connection.connection.connectionId }),
            contentType: 'application/json',
            //new JSAnnotation("CS", index, fabricObj.toJSON()),
            success: function (data) {
                console.log("GOGO");
                term.write("$ EXECUTING CODE\r\n\r\n");
            },
        });
    }

    connection.onclose(() => {
        document.getElementById('status').innerText = "CONNECTION LOST";
        document.getElementById('status').classList.add("btn-disabled");
        term.write('\u001b[31m' + "Connection to server is lost" + '\r\n')
        term.write('\u001b[31m' + "Check if you have working internet, and refresh the page." + '\r\n')
        term.write('\u001b[0m')
        connection.start().then(function () {
            document.getElementById('status').innerText = "RUN";
            document.getElementById('status').classList.remove("loading");
            document.getElementById("status").classList.remove("btn-disabled");
            term.write('\033[32m' + "Reconnected! " + '\r\n')
            term.write('\u001b[0m')
        }).catch(function (err) {
            return console.error(err.toString());
        });
    })


    connection.start().then(function () {
        document.getElementById('status').innerText = "RUN";
        document.getElementById('status').classList.remove("loading");
        //document.getElementById("sendButton").disabled = false;
    }).catch(function (err) {
        return console.error(err.toString());
    });

    /*document.getElementById("sendButton").addEventListener("click", function (event) {
        connection.invoke("SendMessage", user, message).catch(function (err) {
            return console.error(err.toString());
        });
        event.preventDefault();
    });*/</script>
